import java.util.List ; 
import java.util.ArrayList ; 
public class Levels {

     List<char[][]> levels;

      // Map Legend
    // '#' => Wall
    // '.' => Point (goal for boxes)
    // ' ' => Empty space
    // '$' => Crate (box)
    // '@' => Player

public Levels(){
    levels = new ArrayList<>();

    char[][] area1 = {
        {'#', '#', '#', '#', '#', '#','#','#','#','#', '#', '#'},
        {'#', '.', ' ', '.', ' ', ' ',' ',' ',' ',' ', ' ', '#'},
        {'#', '$', ' ', '$', ' ', ' ',' ',' ',' ',' ', ' ', '#'},
        {'#', ' ', ' ', ' ', ' ', ' ',' ',' ',' ',' ', ' ', '#'},
        {'#', ' ', ' ', ' ', ' ', ' ',' ',' ',' ',' ', ' ', '#'},
        {'#', ' ', ' ', ' ', ' ', ' ',' ',' ',' ',' ', ' ', '#'},
        {'#', '.', '$', ' ', ' ', ' ',' ',' ',' ',' ', ' ', '#'},
        {'#', '#', '#', '#', '#', '#','#','#','#','#', '#', '#'}
    };

    char[][] area2 = {
        {'#', '#', '#', '#', '#', '#', '#', '#'},
        {'#', '.', ' ', '$', ' ', ' ', ' ', '#'},
        {'#', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
        {'#', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
        {'#', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
        {'#', ' ', ' ', ' ', '$', ' ', ' ', '#'},
        {'#', '.', ' ', ' ', ' ', ' ', ' ', '#'},
        {'#', '#', '#', '#', '#', '#', '#', '#'}
    };

    char[][] area3 = {
        {'#', '#', '#', '#', '#', '#', '#', '#'},
        {'#', '.', '$', ' ', ' ', ' ', ' ', '#'},
        {'#', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
        {'#', '.', '$', ' ', ' ', ' ', ' ', '#'},
        {'#', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
        {'#', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
        {'#', ' ', ' ', ' ', ' ', ' ', ' ', '#'},
        {'#', '#', '#', '#', '#', '#', '#', '#'}
    };

    // Add levels to the list
    levels.add(area1);
    levels.add(area2);
    levels.add(area3);
}

public char[][] getLevel(int index) {
    if (index >= 0 && index < levels.size()) {
        return levels.get(index);
    } else {
        throw new IllegalArgumentException("Invalid level index!");
    }
}

public int getTotalLevels() {
    return levels.size();
}

}
